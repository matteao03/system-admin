{"remainingRequest":"/Users/tangjun/www/strayjoke-admin/node_modules/babel-loader/lib/index.js!/Users/tangjun/www/strayjoke-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/tangjun/www/strayjoke-admin/src/plugins/element-theme.js","dependencies":[{"path":"/Users/tangjun/www/strayjoke-admin/src/plugins/element-theme.js","mtime":1544676583000},{"path":"/Users/tangjun/www/strayjoke-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tangjun/www/strayjoke-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tangjun/www/strayjoke-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/tangjun/www/strayjoke-admin/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n *    Copyright (c) 2018-2025, lengleng All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n * Neither the name of the pig4cloud.com developer nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n * Author: lengleng (wangiegie@gmail.com)\n */\nimport { mapGetters } from \"vuex\";\n\nvar version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\n\n\nvar ORIGINAL_THEME = \"#409EFF\"; // default color\n\nexport default function () {\n  return {\n    data: function data() {\n      return {\n        themeVal: ORIGINAL_THEME\n      };\n    },\n    created: function created() {\n      this.themeVal = this.theme;\n    },\n    watch: {\n      themeVal: function themeVal(val, oldVal) {\n        this.$store.commit(\"SET_THEME\", val);\n        this.updateTheme(val, oldVal);\n      }\n    },\n    computed: _objectSpread({}, mapGetters([\"theme\"])),\n    methods: {\n      updateTheme: function updateTheme(val, oldVal) {\n        var _this = this;\n\n        if (typeof val !== \"string\") return;\n        var head = document.getElementsByTagName(\"head\")[0];\n        var themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n        var originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n\n        var getHandler = function getHandler(variable, id) {\n          return function () {\n            var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n\n            var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n\n            var styleTag = document.getElementById(id);\n\n            if (!styleTag) {\n              styleTag = document.createElement(\"style\");\n              styleTag.setAttribute(\"id\", id);\n              head.appendChild(styleTag);\n            }\n\n            styleTag.innerText = newStyle;\n          };\n        };\n\n        var chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n        if (!this.chalk) {\n          var url = \"https://unpkg.com/element-ui@\".concat(version, \"/lib/theme-chalk/index.css\");\n          this.getCSSString(url, chalkHandler, \"chalk\");\n        } else {\n          chalkHandler();\n        }\n\n        var styles = [].slice.call(document.querySelectorAll(\"style\")).filter(function (style) {\n          var text = style.innerText;\n          return new RegExp(oldVal, \"i\").test(text) && !/Chalk Variables/.test(text);\n        });\n        styles.forEach(function (style) {\n          var innerText = style.innerText;\n          if (typeof innerText !== \"string\") return;\n          style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n        });\n      },\n      updateStyle: function updateStyle(style, oldCluster, newCluster) {\n        var newStyle = style;\n        oldCluster.forEach(function (color, index) {\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n        });\n        return newStyle;\n      },\n      getCSSString: function getCSSString(url, callback, variable) {\n        var _this2 = this;\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            if (variable) {\n              _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            }\n\n            callback(xhr.responseText);\n          }\n        };\n\n        xhr.open(\"GET\", url);\n        xhr.send();\n      },\n      getThemeCluster: function getThemeCluster(theme) {\n        var tintColor = function tintColor(color, tint) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n\n          if (tint === 0) {\n            // when primary color is in its rgb space\n            return [red, green, blue].join(\",\");\n          } else {\n            red += Math.round(tint * (255 - red));\n            green += Math.round(tint * (255 - green));\n            blue += Math.round(tint * (255 - blue));\n            red = red.toString(16);\n            green = green.toString(16);\n            blue = blue.toString(16);\n            return \"#\".concat(red).concat(green).concat(blue);\n          }\n        };\n\n        var shadeColor = function shadeColor(color, shade) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n          red = Math.round((1 - shade) * red);\n          green = Math.round((1 - shade) * green);\n          blue = Math.round((1 - shade) * blue);\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        };\n\n        var clusters = [theme];\n\n        for (var i = 0; i <= 9; i++) {\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n        }\n\n        clusters.push(shadeColor(theme, 0.1));\n        return clusters;\n      }\n    }\n  };\n}",{"version":3,"sources":["/Users/tangjun/www/strayjoke-admin/src/plugins/element-theme.js"],"names":["mapGetters","version","require","ORIGINAL_THEME","data","themeVal","created","theme","watch","val","oldVal","$store","commit","updateTheme","computed","methods","head","document","getElementsByTagName","themeCluster","getThemeCluster","replace","originalCluster","getHandler","variable","id","newStyle","updateStyle","styleTag","getElementById","createElement","setAttribute","appendChild","innerText","chalkHandler","chalk","url","getCSSString","styles","slice","call","querySelectorAll","filter","style","text","RegExp","test","forEach","oldCluster","newCluster","color","index","callback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","i","push","Number","toFixed"],"mappings":"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","sourcesContent":["/*\n *    Copyright (c) 2018-2025, lengleng All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n * Neither the name of the pig4cloud.com developer nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n * Author: lengleng (wangiegie@gmail.com)\n */\n\nimport { mapGetters } from \"vuex\";\n\nconst version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\nconst ORIGINAL_THEME = \"#409EFF\"; // default color\nexport default function () {\n  return {\n    data() {\n      return {\n        themeVal: ORIGINAL_THEME\n      }\n    },\n    created() {\n      this.themeVal = this.theme;\n    },\n    watch: {\n      themeVal(val, oldVal) {\n        this.$store.commit(\"SET_THEME\", val);\n        this.updateTheme(val, oldVal);\n      }\n    },\n    computed: {\n      ...mapGetters([\"theme\"])\n    },\n    methods: {\n      updateTheme(val, oldVal) {\n        if (typeof val !== \"string\") return;\n        const head = document.getElementsByTagName(\"head\")[0];\n        const themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n        const originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n        const getHandler = (variable, id) => {\n          return () => {\n            const originalCluster = this.getThemeCluster(\n              ORIGINAL_THEME.replace(\"#\", \"\")\n            );\n            const newStyle = this.updateStyle(\n              this[variable],\n              originalCluster,\n              themeCluster\n            );\n\n            let styleTag = document.getElementById(id);\n            if (!styleTag) {\n              styleTag = document.createElement(\"style\");\n              styleTag.setAttribute(\"id\", id);\n              head.appendChild(styleTag);\n            }\n            styleTag.innerText = newStyle;\n          };\n        };\n\n        const chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n        if (!this.chalk) {\n          const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`;\n          this.getCSSString(url, chalkHandler, \"chalk\");\n        } else {\n          chalkHandler();\n        }\n\n        const styles = [].slice\n          .call(document.querySelectorAll(\"style\"))\n          .filter(style => {\n            const text = style.innerText;\n            return (\n              new RegExp(oldVal, \"i\").test(text) && !/Chalk Variables/.test(text)\n            );\n          });\n        styles.forEach(style => {\n          const {\n            innerText\n          } = style;\n          if (typeof innerText !== \"string\") return;\n          style.innerText = this.updateStyle(\n            innerText,\n            originalCluster,\n            themeCluster\n          );\n        });\n      },\n      updateStyle(style, oldCluster, newCluster) {\n        let newStyle = style;\n        oldCluster.forEach((color, index) => {\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n        });\n        return newStyle;\n      },\n      getCSSString(url, callback, variable) {\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            if (variable) {\n              this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            }\n            callback(xhr.responseText);\n          }\n        };\n        xhr.open(\"GET\", url);\n        xhr.send();\n      },\n      getThemeCluster(theme) {\n        const tintColor = (color, tint) => {\n          let red = parseInt(color.slice(0, 2), 16);\n          let green = parseInt(color.slice(2, 4), 16);\n          let blue = parseInt(color.slice(4, 6), 16);\n\n          if (tint === 0) {\n            // when primary color is in its rgb space\n            return [red, green, blue].join(\",\");\n          } else {\n            red += Math.round(tint * (255 - red));\n            green += Math.round(tint * (255 - green));\n            blue += Math.round(tint * (255 - blue));\n\n            red = red.toString(16);\n            green = green.toString(16);\n            blue = blue.toString(16);\n\n            return `#${red}${green}${blue}`;\n          }\n        };\n\n        const shadeColor = (color, shade) => {\n          let red = parseInt(color.slice(0, 2), 16);\n          let green = parseInt(color.slice(2, 4), 16);\n          let blue = parseInt(color.slice(4, 6), 16);\n\n          red = Math.round((1 - shade) * red);\n          green = Math.round((1 - shade) * green);\n          blue = Math.round((1 - shade) * blue);\n\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n\n          return `#${red}${green}${blue}`;\n        };\n\n        const clusters = [theme];\n        for (let i = 0; i <= 9; i++) {\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n        }\n        clusters.push(shadeColor(theme, 0.1));\n        return clusters;\n      }\n    }\n  }\n}\n"]}]}
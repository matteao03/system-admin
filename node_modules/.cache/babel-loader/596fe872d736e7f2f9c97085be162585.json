{"remainingRequest":"/Users/tangjun/www/strayjoke-admin/node_modules/babel-loader/lib/index.js!/Users/tangjun/www/strayjoke-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/tangjun/www/strayjoke-admin/src/utils/request.js","dependencies":[{"path":"/Users/tangjun/www/strayjoke-admin/src/utils/request.js","mtime":1545219561000},{"path":"/Users/tangjun/www/strayjoke-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tangjun/www/strayjoke-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tangjun/www/strayjoke-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport axios from 'axios';\nimport { MessageBox } from 'element-ui';\naxios.defaults.baseURL = '';\n/* 普通请求 */\n\nexport var request = function request(url, params) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var auto_error_res = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var auto_error_data = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var args = Object.assign({\n    'method': 'get',\n    'url': url,\n    'data': params\n  }, config);\n  return axios(args).then(function (res) {\n    if (!res.data.success) {\n      res.data.error = res.data.error || {};\n      console.error(res.data.error);\n\n      if (auto_error_data) {\n        var err_msg = res.data.error.message || '未知的服务器错误，请联系管理员！';\n        var err_cod = res.data.error.code || -1;\n        MessageBox.alert(err_msg, '请求失败：' + err_cod, {\n          confirmButtonText: '确定'\n        });\n      }\n\n      return Promise.reject(res.data.error);\n    }\n\n    return res.data.result;\n  }, function (error) {\n    console.error(error);\n\n    if (auto_error_res) {\n      var err_status = error.response.status || -100;\n      MessageBox.alert('网络请求异常，请联系管理员！', '请求异常：' + err_status, {\n        confirmButtonText: '确定'\n      });\n    }\n\n    return Promise.reject(error);\n  });\n};",{"version":3,"sources":["/Users/tangjun/www/strayjoke-admin/src/utils/request.js"],"names":["axios","MessageBox","defaults","baseURL","request","url","params","config","auto_error_res","auto_error_data","args","Object","assign","then","res","data","success","error","console","err_msg","message","err_cod","code","alert","confirmButtonText","Promise","reject","result","err_status","response","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,EAAzB;AAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,MAAN,EAA6E;AAAA,MAA/DC,MAA+D,uEAAtD,EAAsD;AAAA,MAAlDC,cAAkD,uEAAjC,IAAiC;AAAA,MAA3BC,eAA2B,uEAAT,IAAS;AAClG,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;AACzB,cAAU,KADe;AAEzB,WAAOP,GAFkB;AAGzB,YAAQC;AAHiB,GAAd,EAIVC,MAJU,CAAb;AAKA,SAAOP,KAAK,CAACU,IAAD,CAAL,CAAYG,IAAZ,CAAiB,UAACC,GAAD,EAAS;AAC/B,QAAI,CAACA,GAAG,CAACC,IAAJ,CAASC,OAAd,EAAuB;AACrBF,MAAAA,GAAG,CAACC,IAAJ,CAASE,KAAT,GAAiBH,GAAG,CAACC,IAAJ,CAASE,KAAT,IAAkB,EAAnC;AACAC,MAAAA,OAAO,CAACD,KAAR,CAAcH,GAAG,CAACC,IAAJ,CAASE,KAAvB;;AACA,UAAIR,eAAJ,EAAqB;AACnB,YAAMU,OAAO,GAAGL,GAAG,CAACC,IAAJ,CAASE,KAAT,CAAeG,OAAf,IAA0B,kBAA1C;AACA,YAAMC,OAAO,GAAGP,GAAG,CAACC,IAAJ,CAASE,KAAT,CAAeK,IAAf,IAAuB,CAAC,CAAxC;AACArB,QAAAA,UAAU,CAACsB,KAAX,CAAiBJ,OAAjB,EAA0B,UAAUE,OAApC,EAA6C;AAACG,UAAAA,iBAAiB,EAAE;AAApB,SAA7C;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAeZ,GAAG,CAACC,IAAJ,CAASE,KAAxB,CAAP;AACD;;AACD,WAAOH,GAAG,CAACC,IAAJ,CAASY,MAAhB;AACD,GAZM,EAYJ,UAACV,KAAD,EAAW;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;;AACA,QAAIT,cAAJ,EAAoB;AAClB,UAAMoB,UAAU,GAAGX,KAAK,CAACY,QAAN,CAAeC,MAAf,IAAyB,CAAC,GAA7C;AACA7B,MAAAA,UAAU,CAACsB,KAAX,CAAiB,gBAAjB,EAAmC,UAAUK,UAA7C,EAAyD;AAACJ,QAAAA,iBAAiB,EAAE;AAApB,OAAzD;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAeT,KAAf,CAAP;AACD,GAnBM,CAAP;AAoBD,CA1BM","sourcesContent":["import axios from 'axios'\nimport { MessageBox } from 'element-ui'\n\naxios.defaults.baseURL = ''; \n\n/* 普通请求 */\nexport const request = (url, params, config = {}, auto_error_res = true, auto_error_data = true) => {\n  const args = Object.assign({\n    'method': 'get',\n    'url': url,\n    'data': params\n  }, config)\n  return axios(args).then((res) => {\n    if (!res.data.success) {\n      res.data.error = res.data.error || {}\n      console.error(res.data.error)\n      if (auto_error_data) {\n        const err_msg = res.data.error.message || '未知的服务器错误，请联系管理员！'\n        const err_cod = res.data.error.code || -1\n        MessageBox.alert(err_msg, '请求失败：' + err_cod, {confirmButtonText: '确定'})\n      }\n      return Promise.reject(res.data.error)\n    }\n    return res.data.result\n  }, (error) => {\n    console.error(error)\n    if (auto_error_res) {\n      const err_status = error.response.status || -100\n      MessageBox.alert('网络请求异常，请联系管理员！', '请求异常：' + err_status, {confirmButtonText: '确定'})\n    }\n    return Promise.reject(error)\n  })\n}"]}]}